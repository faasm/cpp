name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  checks:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    container:
      image: faasm/cpp-sysroot:0.1.8
    steps:
      # --- Update code ---
      - name: "Checkout code"
        uses: actions/checkout@v3
        with:
          submodules: true
      # --- Build libraries to wasm ---
      - name: "Test"
        run: git ls-files -- "*.py"
      - name: "Build libc"
        run: ./bin/inv_wrapper.sh libc
      - name: "Build libfaasm"
        run: ./bin/inv_wrapper.sh libfaasm
      - name: "Build libfaasmp"
        run: ./bin/inv_wrapper.sh libfaasmp
      - name: "Build libfaasmpi"
        run: ./bin/inv_wrapper.sh libfaasmpi
      - name: "Build libffi"
        run: ./bin/inv_wrapper.sh libffi
      - name: "Build libfake"
        run: ./bin/inv_wrapper.sh libfake
      - name: "Build libemscripten"
        run: ./bin/inv_wrapper.sh libemscripten
      - name: "Build FFmpeg"
        run: ./bin/inv_wrapper.sh ffmpeg
      - name: "Build zlib"
        run: ./bin/inv_wrapper.sh zlib
      - name: "Build libpng"
        run: ./bin/inv_wrapper.sh libpng
      - name: "Build ImageMagick"
        run: ./bin/inv_wrapper.sh imagemagick
      # --- Build functions to wasm ---
      - name: "Build the functions"
        run: ./bin/inv_wrapper.sh func.local --clean
      # --- Build libraries natively ---
      - name: "Build libfaasm native"
        run: ./bin/inv_wrapper.sh libfaasm --native --clean
      - name: "Build libfaasmp native"
        run: ./bin/inv_wrapper.sh libfaasmp --native --clean
      - name: "Build libfaasmpi native"
        run: ./bin/inv_wrapper.sh libfaasmpi --native --clean
      # --- Formatting ---
      - name: "Format code"
        run: ./bin/inv_wrapper.sh format-code --check
